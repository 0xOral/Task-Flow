#################################################################
# Project Prompt: Part 3 - Backend API Integration
#################################################################

### 1. Overview & Global Configuration

**Project Goal:** The primary goal is to integrate the backend API endpoints into the Next.js application. This involves creating data-fetching functions, TypeScript types for the responses, and connecting them to the UI components.

**Base URL:**
- **Development:** `http://localhost:5000`
- **Production:** `there is no production server yet`

**Authentication:**
- **Method:** Bearer Token (JWT).
- **Process:** The JWT token is obtained from the `POST /auth/login` endpoint upon successful login. This token must be included in the `Authorization` header for all protected endpoints.
- **Header Example:** `Authorization: Bearer {your_jwt_token}`

---
### 2. API Endpoint Definitions


#### [HTTP_METHOD] /path/to/endpoint
<hr>

**Endpoint Name:** [A clear, descriptive name, e.g., "Get All Students"]
**Description:** [A brief explanation of what this endpoint does, e.g., "Fetches a paginated list of all registered students. This endpoint is protected and requires authentication."]

- **Method:** `[GET/POST/PUT/DELETE]`
- **URL:** `{BASE_URL}[/path/to/endpoint]`

**Headers (if applicable):**
- `Authorization`: `Bearer {jwt_token}`

**Query Parameters (if applicable):**
- `param_name` (`type`, `required/optional`): [Description of the parameter].
  - *Example: `page` (`number`, `optional`): The page number for pagination. Defaults to 1.*
  - *Example: `limit` (`number`, `optional`): The number of students per page. Defaults to 10.*
  - *Example: `search` (`string`, `optional`): A search query to filter students by name or email.*

**Request Body (for POST/PUT/PATCH):**
```json
// Provide a clear JSON structure of the request body.
// Use comments to specify data types and validation rules.
{
  "fieldName": "string (required)",
  "anotherField": "number (optional, defaults to 0)"
}